/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

import controller.ImagemController;
import utils.FTPFileSender;

/**
 *
 * @author Matheus
 */
public class CadastrarImagem extends javax.swing.JFrame {
    
    File image = null;
    Integer idImovel;
    DefaultListModel <String> model = new DefaultListModel();
    ArrayList<String> fileList = new ArrayList<>();
    ArrayList<String> filePathList = new ArrayList<>();

    /**
     * Creates new form CadastrarImagem
     */
    public CadastrarImagem() {
        this.idImovel = 3;
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        setSize(850, 650);
        ImageIcon ic = new ImageIcon("C:\\xampp\\htdocs\\imobiliariati\\software\\imobiliariati\\src\\view\\UI\\favicon.png");
        setIconImage(ic.getImage());
        setTitle("Selecionar uma Imagem");
        btSearchFile.requestFocus();
    }

    public CadastrarImagem(Integer idImovel) {
        this.idImovel = idImovel;
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        setSize(860, 650);
        ImageIcon ic = new ImageIcon("C:\\xampp\\htdocs\\imobiliariati\\software\\imobiliariati\\src\\view\\UI\\favicon.png");
        setIconImage(ic.getImage());
        setTitle("Selecionar uma Imagem");
        btSearchFile.requestFocus();
    }
    
    public void enableFields(boolean enable) {
        String e = String.valueOf(enable);
        switch (e) {
            case "true" -> {
                btAddImage.setEnabled(true);
                btSearchFile.setEnabled(true);
                btFinish.setEnabled(true);
            }
            case "false" -> {
                btAddImage.setEnabled(false);
                btSearchFile.setEnabled(false);
                btFinish.setEnabled(false);
            }
            default -> {              
                btAddImage.setEnabled(true);
                btSearchFile.setEnabled(true);
                btFinish.setEnabled(true);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btSearchFile = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tfFilePath = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btFinish = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lsFilePath = new javax.swing.JList<>();
        btAddImage = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lbFileName = new javax.swing.JLabel();
        labelImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(860, 782));
        getContentPane().setLayout(new java.awt.FlowLayout());

        jPanel1.setMaximumSize(new java.awt.Dimension(860, 782));

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btSearchFile.setText("Procurar");
        btSearchFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSearchFileActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Nirmala UI", 0, 18)); // NOI18N
        jLabel1.setText("Selecione arquivos de imagem para cadastrar com seu imóvel");

        tfFilePath.setEditable(false);
        tfFilePath.setMaximumSize(new java.awt.Dimension(704, 22));
        tfFilePath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfFilePathActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Nirmala UI", 0, 12)); // NOI18N
        jLabel2.setText("Selecione apenas arquivos *.jpg ou *.png");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(tfFilePath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btSearchFile)
                        .addGap(25, 25, 25))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btSearchFile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btFinish.setText("Concluir");
        btFinish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFinishActionPerformed(evt);
            }
        });

        jLabel4.setText("<html>Clique em Concluir para <br>enviar as imagens ao lado</html>");

        jScrollPane1.setViewportView(lsFilePath);

        btAddImage.setText("Adicionar Imagem");
        btAddImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddImageActionPerformed(evt);
            }
        });

        jLabel3.setText("<html>Adicione uma imagem à lista.<br>Para enviar todas as imagens<br>desejadas, clique em Concluir</html>");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btAddImage))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(btFinish))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(btAddImage)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btFinish)
                        .addGap(70, 70, 70))))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setMaximumSize(new java.awt.Dimension(820, 282));

        lbFileName.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        lbFileName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbFileName.setText("[...]");
        lbFileName.setMaximumSize(new java.awt.Dimension(380, 20));
        lbFileName.setPreferredSize(new java.awt.Dimension(380, 20));

        labelImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/UI/select-image.jpg"))); // NOI18N
        labelImage.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelImage)
                .addContainerGap(224, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelImage, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btSearchFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSearchFileActionPerformed
        fileChooser.setFileFilter(new FileNameExtensionFilter("Arquivos de imagem",  "png", "jpg")); 
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.showOpenDialog(null);
        
        image = fileChooser.getSelectedFile();
        String fileName = fileChooser.getName(image);
        
        lbFileName.setText("<html><body width='380px'>"+fileName+"</body></html>");
        
        if (image.exists() && image.isFile()) {
            try {
                BufferedImage bfImage = ImageIO.read(image);
                ImageIcon icon = new ImageIcon(bfImage.getScaledInstance(300, 200, java.awt.Image.SCALE_DEFAULT));
                
                labelImage.setIcon(icon);
                
                tfFilePath.setText(image.toString());
            } catch (IOException e) {
                System.out.println("Erro ao setar imagem: "+e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Imagem não encontrada, por favor selecione novamente.");
            tfFilePath.setText("");
            btSearchFile.requestFocus();
        }
    }//GEN-LAST:event_btSearchFileActionPerformed

    private void tfFilePathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfFilePathActionPerformed
        fileChooser.setFileFilter(new FileNameExtensionFilter("Arquivos de imagem",  "png", "jpg")); 
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.showOpenDialog(null);
        
        image = fileChooser.getSelectedFile();
        System.out.println(image.toString());
        String fileName = fileChooser.getName(image);
        
        lbFileName.setText(fileName);
        
        if (image.exists() && image.isFile()) {
            try {
                BufferedImage bfImage = ImageIO.read(image);
                ImageIcon icon = new ImageIcon(bfImage.getScaledInstance(300, 200, java.awt.Image.SCALE_DEFAULT));
                
                labelImage.setIcon(icon);
                
                tfFilePath.setText(image.toString());
            } catch (IOException e) {
                System.out.println("Erro ao setar imagem: "+e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Imagem não encontrada, por favor selecione novamente.");
        }
    }//GEN-LAST:event_tfFilePathActionPerformed

    private void btAddImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddImageActionPerformed
        String filePath = image.toString();
        String fileName = image.getName();
        
        if (image != null && image.exists() && image.isFile()) { //if image exists and is actually a file
            
            if (!filePathList.contains(filePath)) { // if the image is already stored
                model.addElement(filePath);
                lsFilePath.setModel(model);
                
                fileList.add(fileName);
                filePathList.add(filePath);
                
                tfFilePath.setText("");
                lbFileName.setText("[...]");
                
                image = null;
                
                try {
                    File selectImageFile = new File("C:\\xampp\\htdocs\\imobiliariati\\software\\imobiliariati\\src\\view\\UI\\select-image.jpg");                
                    BufferedImage bfImage;
                    bfImage = ImageIO.read(selectImageFile);
                    ImageIcon icon = new ImageIcon(bfImage.getScaledInstance(300, 200, java.awt.Image.SCALE_DEFAULT));
                    labelImage.setIcon(icon);
                } catch (IOException ex) {
                    System.out.println("Nao foi possivel mudar imagem: "+ex.getMessage());
                }
                
            } else {
                
                JOptionPane.showMessageDialog(null, "As imagens não devem ser repetidas!!!");
            
            }
        } else {
            
            JOptionPane.showMessageDialog(null, "Confira a imagem, ela devem ser um arquivo válido");
            
        }
    }//GEN-LAST:event_btAddImageActionPerformed

    private void btFinishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFinishActionPerformed
        Integer confirm = JOptionPane.showConfirmDialog(null, "Deseja enviar estas imagens?", "Confirmação", JOptionPane.YES_NO_OPTION);
        
        if (confirm == JOptionPane.YES_OPTION) {             
            enableFields(false);
            
            if (new FTPFileSender().sendFile(idImovel, fileList, filePathList)) {
                
                for (String fileName : fileList) {
                    new ImagemController().inserirImagem(idImovel, fileName);
                }
                
                JOptionPane.showMessageDialog(null, "Imagen(s) enviadas com sucesso!!!");
                
            } else {
                JOptionPane.showMessageDialog(null, "Não foi possível enviar as imagens.");
            }
            
            enableFields(true);
        }
    }//GEN-LAST:event_btFinishActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastrarImagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastrarImagem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAddImage;
    private javax.swing.JButton btFinish;
    private javax.swing.JButton btSearchFile;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelImage;
    private javax.swing.JLabel lbFileName;
    private javax.swing.JList<String> lsFilePath;
    private javax.swing.JTextField tfFilePath;
    // End of variables declaration//GEN-END:variables
}
